// Generated by CoffeeScript 1.10.0
(function() {
  var Ohlc, _, assert, quandlData;

  Ohlc = require('../');

  assert = require('chai').assert;

  _ = require('lodash');

  quandlData = require('../quandlSample1570.json');

  describe("Moveing Average test", function() {
    it("ma constructor", function() {
      var data, opts;
      opts = {
        ma: [5, 25, 75]
      };
      data = new Ohlc(quandlData.dataset.data, opts);
      assert.deepEqual(data.objects[0], {
        Date: '2012-08-23',
        Open: 3880,
        High: 3980,
        Low: 3870,
        Close: 3965,
        Volume: 252518,
        ma5: null,
        ma25: null,
        ma75: null
      });
      return assert.deepEqual(_.last(data.objects), {
        Date: '2016-09-23',
        Open: 11130,
        High: 11160,
        Low: 11050,
        Close: 11080,
        Volume: 7980857,
        ma5: 10878,
        ma25: 11060,
        ma75: 10650.4
      });
    });
    it("ma addMa", function() {
      var data;
      data = new Ohlc(quandlData.dataset.data);
      assert.isUndefined(_.last(data.objects).ma5);
      data.addMa(5);
      return assert.equal(_.last(data.objects).ma5, 10878);
    });
    it("Volume Moveing Average constructor", function() {
      var data, opts;
      opts = {
        vma: [5, 25, 75]
      };
      data = new Ohlc(quandlData.dataset.data, opts);
      return assert.deepEqual(_.last(data.objects), {
        Date: '2016-09-23',
        Open: 11130,
        High: 11160,
        Low: 11050,
        Close: 11080,
        Volume: 7980857,
        vma5: 9936501.6,
        vma25: 8149428.32,
        vma75: 12852068.39
      });
    });
    it("Volume Moveing Average addVolumeMa", function() {
      var data;
      data = new Ohlc(quandlData.dataset.data);
      assert.isUndefined(_.last(data.objects).vma5);
      data.addVolumeMa(5);
      return assert.equal(_.last(data.objects).vma5, 9936501.6);
    });
    it("Volume And Price Moveing Average constructor", function() {
      var data, opts;
      opts = {
        vpma: [5, 25, 75]
      };
      data = new Ohlc(quandlData.dataset.data, opts);
      return assert.deepEqual(_.last(data.objects), {
        Date: '2016-09-23',
        Open: 11130,
        High: 11160,
        Low: 11050,
        Close: 11080,
        Volume: 7980857,
        vpma5: 10920.9,
        vpma25: 11034.11,
        vpma75: 10406.39
      });
    });
    return it("Volume And Price Moveing Average addVolumeMa", function() {
      var data;
      data = new Ohlc(quandlData.dataset.data);
      assert.isUndefined(_.last(data.objects).vpma5);
      data.addVPMA(5);
      return assert.equal(_.last(data.objects).vpma5, 10920.9);
    });
  });

  describe("range", function() {
    return it("addRange()", function() {
      var data;
      data = new Ohlc(quandlData.dataset.data);
      data.addRange();
      return assert.equal(data.objects[0].range, 2.84);
    });
  });

}).call(this);
